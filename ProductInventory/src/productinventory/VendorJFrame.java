/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package productinventory;

/**
 *
 * @author WINDOWS 10
 */

import java.sql.*;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class VendorJFrame extends javax.swing.JFrame {

    /**
     * Creates new form VendorJFrame
     */
    public VendorJFrame() {
        initComponents();
        Connect();
        LoadProductNo();
        Fetch();
    }

    Connection connection;
    PreparedStatement preparedStatement;
    ResultSet resultSet;
    
    public void Connect() {
        if (connection == null) {
            try {
                String url = "jdbc:mysql://localhost:3306/dbinventory";
                String user = "root";
                String password = "";
                DriverManager.registerDriver(new com.mysql.jdbc.Driver());
                connection = DriverManager.getConnection(url, user, password);
            } catch (SQLException t) {
                System.out.println("Error connection!");
            }
        }
    }
    
    public void LoadProductNo() {
        try {
            preparedStatement = connection.prepareStatement("SELECT vendor_id FROM vendor_tbl");
            resultSet = preparedStatement.executeQuery();
            vendorIDJComboBox.removeAllItems();
            while(resultSet.next()) {
                vendorIDJComboBox.addItem(resultSet.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(VendorJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void Fetch() {
        try {
            int q;
            preparedStatement = connection.prepareStatement("SELECT * FROM vendor_tbl");
            resultSet = preparedStatement.executeQuery();
            ResultSetMetaData rss = resultSet.getMetaData();
            q = rss.getColumnCount();
            
            DefaultTableModel defaultTable = (DefaultTableModel)vendorJTable.getModel();
            defaultTable.setRowCount(0);
            while(resultSet.next()) {
                Vector vector = new Vector();
                for(int a=1; a<=q; a++) {
                    vector.add(resultSet.getString("vendor_id"));
                    vector.add(resultSet.getString("vendor_name"));
                    vector.add(resultSet.getString("vendor_phone_number"));
                    vector.add(resultSet.getString("vendor_address"));                    
                }
                defaultTable.addRow(vector);
            }
        } catch (SQLException ex) {
            Logger.getLogger(VendorJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        vendorJLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        vendorNameJLabel = new javax.swing.JLabel();
        vendorPhoneNumberJLabel1 = new javax.swing.JLabel();
        vendorAddressJLabel = new javax.swing.JLabel();
        vendorPhoneNumberJTextField = new javax.swing.JTextField();
        vendorNameJTextField = new javax.swing.JTextField();
        vendorAddressJTextField = new javax.swing.JTextField();
        addJButton = new javax.swing.JButton();
        updateJButton = new javax.swing.JButton();
        deleteJButton = new javax.swing.JButton();
        searchJButton = new javax.swing.JButton();
        vendorIDJLabel = new javax.swing.JLabel();
        vendorIDJComboBox = new javax.swing.JComboBox<>();
        cancelJButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        vendorJTable = new javax.swing.JTable();
        closeJButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        vendorJLabel.setFont(new java.awt.Font("Cooper Black", 0, 18)); // NOI18N
        vendorJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        vendorJLabel.setText("VENDOR");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "INPUT DATA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 0, 12))); // NOI18N

        vendorNameJLabel.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        vendorNameJLabel.setText("Name");

        vendorPhoneNumberJLabel1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        vendorPhoneNumberJLabel1.setText("Phone Number");

        vendorAddressJLabel.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        vendorAddressJLabel.setText("Address");

        vendorPhoneNumberJTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        vendorPhoneNumberJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendorPhoneNumberJTextFieldActionPerformed(evt);
            }
        });

        vendorNameJTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        vendorAddressJTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        addJButton.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        addJButton.setForeground(new java.awt.Color(0, 0, 255));
        addJButton.setText("ADD");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });

        updateJButton.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        updateJButton.setForeground(new java.awt.Color(255, 153, 0));
        updateJButton.setText("UPDATE");
        updateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateJButtonActionPerformed(evt);
            }
        });

        deleteJButton.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        deleteJButton.setForeground(new java.awt.Color(255, 0, 0));
        deleteJButton.setText("DELETE");
        deleteJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteJButtonActionPerformed(evt);
            }
        });

        searchJButton.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        searchJButton.setText("SEARCH");
        searchJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchJButtonActionPerformed(evt);
            }
        });

        vendorIDJLabel.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        vendorIDJLabel.setText("Vendor ID");

        vendorIDJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cancelJButton.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        cancelJButton.setText("CANCEL");
        cancelJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(addJButton)
                        .addGap(18, 18, 18)
                        .addComponent(updateJButton)
                        .addGap(18, 18, 18)
                        .addComponent(deleteJButton)
                        .addGap(18, 18, 18)
                        .addComponent(cancelJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(125, 125, 125))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(vendorPhoneNumberJLabel1)
                            .addComponent(vendorNameJLabel)
                            .addComponent(vendorAddressJLabel))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(vendorPhoneNumberJTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(vendorAddressJTextField)
                            .addComponent(vendorNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(vendorIDJLabel)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(searchJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(vendorIDJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vendorNameJLabel)
                    .addComponent(vendorNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vendorIDJLabel)
                    .addComponent(vendorIDJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vendorPhoneNumberJLabel1)
                    .addComponent(vendorPhoneNumberJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchJButton))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vendorAddressJLabel)
                    .addComponent(vendorAddressJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addJButton)
                    .addComponent(updateJButton)
                    .addComponent(deleteJButton)
                    .addComponent(cancelJButton))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DATA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 0, 12))); // NOI18N

        vendorJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vendor ID", "Name", "Phone Number", "Address"
            }
        ));
        vendorJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vendorJTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(vendorJTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        closeJButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        closeJButton.setText("CLOSE");
        closeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(vendorJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(closeJButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(vendorJLabel)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(closeJButton)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void deleteJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteJButtonActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String vendor_id = vendorIDJComboBox.getSelectedItem().toString();
            
            preparedStatement = connection.prepareStatement("DELETE FROM vendor_tbl WHERE vendor_id=?");
            preparedStatement.setString(1, vendor_id);
            
            int k = preparedStatement.executeUpdate();
            
            if(k==1){
                JOptionPane.showMessageDialog(this, "Record Successfully Deleted");
                vendorNameJTextField.setText("");
                vendorPhoneNumberJTextField.setText("");
                vendorAddressJTextField.setText("");
                vendorNameJTextField.requestFocus();
                Fetch();
                LoadProductNo();
            } else {
                JOptionPane.showMessageDialog(this, "Record Failed to Delete");
            }
        } catch (SQLException ex) {
            Logger.getLogger(VendorJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        addJButton.setEnabled(true);
    }//GEN-LAST:event_deleteJButtonActionPerformed

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
        // TODO add your handling code here:
        if(vendorNameJTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vendor name is required");
        } else if (vendorPhoneNumberJTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vendor phone number is required");   
        } else if (vendorAddressJTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vendor address is required");   
        } else {
            try {
                // TODO add your handling code here:
                String vendor_name = vendorNameJTextField.getText();
                String vendor_phone_number = vendorPhoneNumberJTextField.getText();
                String vendor_address = vendorAddressJTextField.getText();

                preparedStatement = connection.prepareStatement("INSERT INTO vendor_tbl (vendor_name,vendor_phone_number,vendor_address) VALUES (?,?,?)");

                preparedStatement.setString(1, vendor_name);
                preparedStatement.setString(2, vendor_phone_number);
                preparedStatement.setString(3, vendor_address);

                int k = preparedStatement.executeUpdate();

                if(k==1){
                    JOptionPane.showMessageDialog(this, "Record Successfully Added");
                    vendorNameJTextField.setText("");
                    vendorPhoneNumberJTextField.setText("");
                    vendorAddressJTextField.setText("");
                    Fetch();
                    LoadProductNo();
                } else {
                    JOptionPane.showMessageDialog(this, "Record Failed to Add");
                }

            } catch (SQLException ex) {
                Logger.getLogger(VendorJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_addJButtonActionPerformed

    private void updateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateJButtonActionPerformed
        // TODO add your handling code here:
        if(vendorNameJTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vendor name is required");
        } else if (vendorPhoneNumberJTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vendor phone number is required");   
        } else if (vendorAddressJTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vendor address is required");   
        } else {
            try {
                // TODO add your handling code here:
                String vendor_name = vendorNameJTextField.getText();
                String vendor_phone_number = vendorPhoneNumberJTextField.getText();
                String vendor_address = vendorAddressJTextField.getText();
                String vendor_id = vendorIDJComboBox.getSelectedItem().toString();

                preparedStatement = connection.prepareStatement("UPDATE vendor_tbl SET vendor_name=?,vendor_phone_number=?,vendor_address=? WHERE vendor_id=?");

                preparedStatement.setString(1, vendor_name);
                preparedStatement.setString(2, vendor_phone_number);
                preparedStatement.setString(3, vendor_address);
                preparedStatement.setString(4, vendor_id);

                int k = preparedStatement.executeUpdate();

                if(k==1){
                    JOptionPane.showMessageDialog(this, "Record Successfully Updated");
                    vendorNameJTextField.setText("");
                    vendorPhoneNumberJTextField.setText("");
                    vendorAddressJTextField.setText("");
                    vendorNameJTextField.requestFocus();
                    Fetch();
                    LoadProductNo();
                } else {
                    JOptionPane.showMessageDialog(this, "Record Failed to Update");
                }
            } catch (SQLException ex) {
                Logger.getLogger(VendorJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        addJButton.setEnabled(true);
    }//GEN-LAST:event_updateJButtonActionPerformed

    private void searchJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchJButtonActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String vendor_id = vendorIDJComboBox.getSelectedItem().toString();
            
            preparedStatement = connection.prepareStatement("SELECT * FROM vendor_tbl WHERE vendor_id=?");
            preparedStatement.setString(1, vendor_id);
            resultSet = preparedStatement.executeQuery();
            
            if (resultSet.next()==true) {
                vendorNameJTextField.setText(resultSet.getString(2));
                vendorPhoneNumberJTextField.setText(resultSet.getString(3));
                vendorAddressJTextField.setText(resultSet.getString(4));                
            } else {
                JOptionPane.showMessageDialog(this, "Record Not Found");
            }
        } catch (SQLException ex) {
            Logger.getLogger(VendorJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        addJButton.setEnabled(false);
    }//GEN-LAST:event_searchJButtonActionPerformed

    private void closeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeJButtonActionPerformed
        // TODO add your handling code here:
        new MainJFrame().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_closeJButtonActionPerformed

    private void vendorJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vendorJTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel defaultTable = (DefaultTableModel)vendorJTable.getModel();
        int selected = vendorJTable.getSelectedRow();
        
        int vendor_id = Integer.parseInt(defaultTable.getValueAt(selected, 0).toString());
        vendorNameJTextField.setText(defaultTable.getValueAt(selected, 1).toString());
        vendorPhoneNumberJTextField.setText(defaultTable.getValueAt(selected, 2).toString());
        vendorAddressJTextField.setText(defaultTable.getValueAt(selected, 3).toString());
        
        addJButton.setEnabled(false);
    }//GEN-LAST:event_vendorJTableMouseClicked

    private void cancelJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelJButtonActionPerformed
        // TODO add your handling code here:
        vendorNameJTextField.setText("");
        vendorPhoneNumberJTextField.setText("");
        vendorAddressJTextField.setText("");
        vendorNameJTextField.requestFocus();
        Fetch();
        LoadProductNo();
        addJButton.setEnabled(true);
    }//GEN-LAST:event_cancelJButtonActionPerformed

    private void vendorPhoneNumberJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendorPhoneNumberJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vendorPhoneNumberJTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VendorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VendorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VendorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VendorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JButton cancelJButton;
    private javax.swing.JButton closeJButton;
    private javax.swing.JButton deleteJButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton searchJButton;
    private javax.swing.JButton updateJButton;
    private javax.swing.JLabel vendorAddressJLabel;
    private javax.swing.JTextField vendorAddressJTextField;
    private javax.swing.JComboBox<String> vendorIDJComboBox;
    private javax.swing.JLabel vendorIDJLabel;
    private javax.swing.JLabel vendorJLabel;
    private javax.swing.JTable vendorJTable;
    private javax.swing.JLabel vendorNameJLabel;
    private javax.swing.JTextField vendorNameJTextField;
    private javax.swing.JLabel vendorPhoneNumberJLabel1;
    private javax.swing.JTextField vendorPhoneNumberJTextField;
    // End of variables declaration//GEN-END:variables
}
